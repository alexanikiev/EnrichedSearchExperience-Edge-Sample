apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    eseedge.version: "1.0"
  creationTimestamp: null
  labels:
    io.eseedge.service: elasticsearch
  name: elasticsearch
  namespace: eseedge
spec:
  replicas: 1
  selector:
    matchLabels:
      io.eseedge.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        eseedge.version: "1.0"
      creationTimestamp: null
      labels:
        io.eseedge.network/esenetwork: "true"
        io.eseedge.service: elasticsearch
    spec:
      containers:
      - env:
        - name: cluster.initial_master_nodes
          valueFrom:
            configMapKeyRef:
              name: elasticsearch-config
              key: cluster_initial_master_nodes 
        - name: cluster.name
          valueFrom:
            configMapKeyRef:
              name: elasticsearch-config
              key: cluster_name
        - name: node.name
          valueFrom:
            configMapKeyRef:
              name: elasticsearch-config
              key: node_name
        - name: ES_JAVA_OPTS
          valueFrom:
            configMapKeyRef:
              name: elasticsearch-config
              key: ES_JAVA_OPTS
        name: elasticsearch
        image: eseregistryedge.azurecr.io/eseedge/elasticsearch:ese
        imagePullPolicy: ""
        ports:
        - containerPort: 9200
        resources:
          limits:
            memory: 3Gi
            ephemeral-storage: 100Mi
          requests:
            memory: 3Gi
            ephemeral-storage: 100Mi
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: elasticsearchvolume
      imagePullSecrets:
      - name: regcred
      initContainers:
      - name: sysctl
        securityContext:
          privileged: true
        command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
        image: eseregistryedge.azurecr.io/eseedge/elasticsearch:ese
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: elasticsearchvolume
        persistentVolumeClaim:
          claimName: elasticsearchvolume
status: {}
